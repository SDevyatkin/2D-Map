// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class response_to_mb_save_state_req {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):response_to_mb_save_state_req {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsresponse_to_mb_save_state_req(bb:flatbuffers.ByteBuffer, obj?:response_to_mb_save_state_req):response_to_mb_save_state_req {
  return (obj || new response_to_mb_save_state_req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsresponse_to_mb_save_state_req(bb:flatbuffers.ByteBuffer, obj?:response_to_mb_save_state_req):response_to_mb_save_state_req {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new response_to_mb_save_state_req()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * true Запрос принят
 */
requestAccepted():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : true;
}

/**
 *true ПМ не может сохранить свое состояние
 */
cannotSaveState():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startresponse_to_mb_save_state_req(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addRequestAccepted(builder:flatbuffers.Builder, requestAccepted:boolean) {
  builder.addFieldInt8(0, +requestAccepted, +true);
}

static addCannotSaveState(builder:flatbuffers.Builder, cannotSaveState:boolean) {
  builder.addFieldInt8(1, +cannotSaveState, +false);
}

static endresponse_to_mb_save_state_req(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createresponse_to_mb_save_state_req(builder:flatbuffers.Builder, requestAccepted:boolean, cannotSaveState:boolean):flatbuffers.Offset {
  response_to_mb_save_state_req.startresponse_to_mb_save_state_req(builder);
  response_to_mb_save_state_req.addRequestAccepted(builder, requestAccepted);
  response_to_mb_save_state_req.addCannotSaveState(builder, cannotSaveState);
  return response_to_mb_save_state_req.endresponse_to_mb_save_state_req(builder);
}

unpack(): response_to_mb_save_state_reqT {
  return new response_to_mb_save_state_reqT(
    this.requestAccepted(),
    this.cannotSaveState()
  );
}


unpackTo(_o: response_to_mb_save_state_reqT): void {
  _o.requestAccepted = this.requestAccepted();
  _o.cannotSaveState = this.cannotSaveState();
}
}

export class response_to_mb_save_state_reqT {
constructor(
  public requestAccepted: boolean = true,
  public cannotSaveState: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return response_to_mb_save_state_req.createresponse_to_mb_save_state_req(builder,
    this.requestAccepted,
    this.cannotSaveState
  );
}
}
