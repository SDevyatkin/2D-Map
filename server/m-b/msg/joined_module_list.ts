// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class joined_module_list {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):joined_module_list {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsjoined_module_list(bb:flatbuffers.ByteBuffer, obj?:joined_module_list):joined_module_list {
  return (obj || new joined_module_list()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsjoined_module_list(bb:flatbuffers.ByteBuffer, obj?:joined_module_list):joined_module_list {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new joined_module_list()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

reserved():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startjoined_module_list(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addReserved(builder:flatbuffers.Builder, reserved:boolean) {
  builder.addFieldInt8(0, +reserved, +false);
}

static endjoined_module_list(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createjoined_module_list(builder:flatbuffers.Builder, reserved:boolean):flatbuffers.Offset {
  joined_module_list.startjoined_module_list(builder);
  joined_module_list.addReserved(builder, reserved);
  return joined_module_list.endjoined_module_list(builder);
}

unpack(): joined_module_listT {
  return new joined_module_listT(
    this.reserved()
  );
}


unpackTo(_o: joined_module_listT): void {
  _o.reserved = this.reserved();
}
}

export class joined_module_listT {
constructor(
  public reserved: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return joined_module_list.createjoined_module_list(builder,
    this.reserved
  );
}
}
