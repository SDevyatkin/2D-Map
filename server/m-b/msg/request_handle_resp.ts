// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 *Ответ
 */
export class request_handle_resp {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):request_handle_resp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsrequest_handle_resp(bb:flatbuffers.ByteBuffer, obj?:request_handle_resp):request_handle_resp {
  return (obj || new request_handle_resp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsrequest_handle_resp(bb:flatbuffers.ByteBuffer, obj?:request_handle_resp):request_handle_resp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new request_handle_resp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 *Статус, true если нет ошибок
 */
status():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : true;
}

/**
 *Некорректный запрос
 */
incorrectRequest():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Внутрення ошибка ПМ Брокер сообщений, дальнейшая работа невозможна
 */
internalError():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Неизвестная структукра (значит не поступал запрос о публикации структукры)
 */
unknowStruct():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Экземпляр структуры не существует
 */
unknowObject():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Неизвестное поле структуры
 */
unknowField():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Запрашиваемый дескриптор (дескриптор считается невалидным если status == false)
 */
handle():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static startrequest_handle_resp(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addStatus(builder:flatbuffers.Builder, status:boolean) {
  builder.addFieldInt8(0, +status, +true);
}

static addIncorrectRequest(builder:flatbuffers.Builder, incorrectRequest:boolean) {
  builder.addFieldInt8(1, +incorrectRequest, +false);
}

static addInternalError(builder:flatbuffers.Builder, internalError:boolean) {
  builder.addFieldInt8(2, +internalError, +false);
}

static addUnknowStruct(builder:flatbuffers.Builder, unknowStruct:boolean) {
  builder.addFieldInt8(3, +unknowStruct, +false);
}

static addUnknowObject(builder:flatbuffers.Builder, unknowObject:boolean) {
  builder.addFieldInt8(4, +unknowObject, +false);
}

static addUnknowField(builder:flatbuffers.Builder, unknowField:boolean) {
  builder.addFieldInt8(5, +unknowField, +false);
}

static addHandle(builder:flatbuffers.Builder, handle:number) {
  builder.addFieldInt8(6, handle, 0);
}

static endrequest_handle_resp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createrequest_handle_resp(builder:flatbuffers.Builder, status:boolean, incorrectRequest:boolean, internalError:boolean, unknowStruct:boolean, unknowObject:boolean, unknowField:boolean, handle:number):flatbuffers.Offset {
  request_handle_resp.startrequest_handle_resp(builder);
  request_handle_resp.addStatus(builder, status);
  request_handle_resp.addIncorrectRequest(builder, incorrectRequest);
  request_handle_resp.addInternalError(builder, internalError);
  request_handle_resp.addUnknowStruct(builder, unknowStruct);
  request_handle_resp.addUnknowObject(builder, unknowObject);
  request_handle_resp.addUnknowField(builder, unknowField);
  request_handle_resp.addHandle(builder, handle);
  return request_handle_resp.endrequest_handle_resp(builder);
}

unpack(): request_handle_respT {
  return new request_handle_respT(
    this.status(),
    this.incorrectRequest(),
    this.internalError(),
    this.unknowStruct(),
    this.unknowObject(),
    this.unknowField(),
    this.handle()
  );
}


unpackTo(_o: request_handle_respT): void {
  _o.status = this.status();
  _o.incorrectRequest = this.incorrectRequest();
  _o.internalError = this.internalError();
  _o.unknowStruct = this.unknowStruct();
  _o.unknowObject = this.unknowObject();
  _o.unknowField = this.unknowField();
  _o.handle = this.handle();
}
}

export class request_handle_respT {
constructor(
  public status: boolean = true,
  public incorrectRequest: boolean = false,
  public internalError: boolean = false,
  public unknowStruct: boolean = false,
  public unknowObject: boolean = false,
  public unknowField: boolean = false,
  public handle: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return request_handle_resp.createrequest_handle_resp(builder,
    this.status,
    this.incorrectRequest,
    this.internalError,
    this.unknowStruct,
    this.unknowObject,
    this.unknowField,
    this.handle
  );
}
}
