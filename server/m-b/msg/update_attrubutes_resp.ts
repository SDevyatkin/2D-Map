// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 *Ответ отправляется только в случае ошибки
 */
export class update_attrubutes_resp {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):update_attrubutes_resp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsupdate_attrubutes_resp(bb:flatbuffers.ByteBuffer, obj?:update_attrubutes_resp):update_attrubutes_resp {
  return (obj || new update_attrubutes_resp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsupdate_attrubutes_resp(bb:flatbuffers.ByteBuffer, obj?:update_attrubutes_resp):update_attrubutes_resp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new update_attrubutes_resp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 *Статус, true если нет ошибок
 */
status():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : true;
}

/**
 *Некорректный запрос
 */
incorrectRequest():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Внутрення ошибка ПМ Брокер сообщений, дальнейшая работа невозможна
 */
internalError():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Неизвестная стркутура данных  (значит не поступал запрос о публикации структукры)
 */
unknowStruct():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Неизвестный экземпляр структуры, значит он еще не создан
 */
unknowObject():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Неизвестное поле структуры
 */
unknowField():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Невалидный дескриптор, который был указан в запросе
 */
badHandle():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static startupdate_attrubutes_resp(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addStatus(builder:flatbuffers.Builder, status:boolean) {
  builder.addFieldInt8(0, +status, +true);
}

static addIncorrectRequest(builder:flatbuffers.Builder, incorrectRequest:boolean) {
  builder.addFieldInt8(1, +incorrectRequest, +false);
}

static addInternalError(builder:flatbuffers.Builder, internalError:boolean) {
  builder.addFieldInt8(2, +internalError, +false);
}

static addUnknowStruct(builder:flatbuffers.Builder, unknowStruct:boolean) {
  builder.addFieldInt8(3, +unknowStruct, +false);
}

static addUnknowObject(builder:flatbuffers.Builder, unknowObject:boolean) {
  builder.addFieldInt8(4, +unknowObject, +false);
}

static addUnknowField(builder:flatbuffers.Builder, unknowField:boolean) {
  builder.addFieldInt8(5, +unknowField, +false);
}

static addBadHandle(builder:flatbuffers.Builder, badHandle:number) {
  builder.addFieldInt8(6, badHandle, 0);
}

static endupdate_attrubutes_resp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createupdate_attrubutes_resp(builder:flatbuffers.Builder, status:boolean, incorrectRequest:boolean, internalError:boolean, unknowStruct:boolean, unknowObject:boolean, unknowField:boolean, badHandle:number):flatbuffers.Offset {
  update_attrubutes_resp.startupdate_attrubutes_resp(builder);
  update_attrubutes_resp.addStatus(builder, status);
  update_attrubutes_resp.addIncorrectRequest(builder, incorrectRequest);
  update_attrubutes_resp.addInternalError(builder, internalError);
  update_attrubutes_resp.addUnknowStruct(builder, unknowStruct);
  update_attrubutes_resp.addUnknowObject(builder, unknowObject);
  update_attrubutes_resp.addUnknowField(builder, unknowField);
  update_attrubutes_resp.addBadHandle(builder, badHandle);
  return update_attrubutes_resp.endupdate_attrubutes_resp(builder);
}

unpack(): update_attrubutes_respT {
  return new update_attrubutes_respT(
    this.status(),
    this.incorrectRequest(),
    this.internalError(),
    this.unknowStruct(),
    this.unknowObject(),
    this.unknowField(),
    this.badHandle()
  );
}


unpackTo(_o: update_attrubutes_respT): void {
  _o.status = this.status();
  _o.incorrectRequest = this.incorrectRequest();
  _o.internalError = this.internalError();
  _o.unknowStruct = this.unknowStruct();
  _o.unknowObject = this.unknowObject();
  _o.unknowField = this.unknowField();
  _o.badHandle = this.badHandle();
}
}

export class update_attrubutes_respT {
constructor(
  public status: boolean = true,
  public incorrectRequest: boolean = false,
  public internalError: boolean = false,
  public unknowStruct: boolean = false,
  public unknowObject: boolean = false,
  public unknowField: boolean = false,
  public badHandle: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return update_attrubutes_resp.createupdate_attrubutes_resp(builder,
    this.status,
    this.incorrectRequest,
    this.internalError,
    this.unknowStruct,
    this.unknowObject,
    this.unknowField,
    this.badHandle
  );
}
}
