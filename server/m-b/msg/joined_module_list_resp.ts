// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { module_info, module_infoT } from '../../m-b/msg/module_info';


/**
 *Ответ
 */
export class joined_module_list_resp {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):joined_module_list_resp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsjoined_module_list_resp(bb:flatbuffers.ByteBuffer, obj?:joined_module_list_resp):joined_module_list_resp {
  return (obj || new joined_module_list_resp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsjoined_module_list_resp(bb:flatbuffers.ByteBuffer, obj?:joined_module_list_resp):joined_module_list_resp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new joined_module_list_resp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

modules(index: number, obj?:module_info):module_info|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new module_info()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

modulesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startjoined_module_list_resp(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addModules(builder:flatbuffers.Builder, modulesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, modulesOffset, 0);
}

static createModulesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startModulesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endjoined_module_list_resp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createjoined_module_list_resp(builder:flatbuffers.Builder, modulesOffset:flatbuffers.Offset):flatbuffers.Offset {
  joined_module_list_resp.startjoined_module_list_resp(builder);
  joined_module_list_resp.addModules(builder, modulesOffset);
  return joined_module_list_resp.endjoined_module_list_resp(builder);
}

unpack(): joined_module_list_respT {
  return new joined_module_list_respT(
    this.bb!.createObjList(this.modules.bind(this), this.modulesLength())
  );
}


unpackTo(_o: joined_module_list_respT): void {
  _o.modules = this.bb!.createObjList(this.modules.bind(this), this.modulesLength());
}
}

export class joined_module_list_respT {
constructor(
  public modules: (module_infoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const modules = joined_module_list_resp.createModulesVector(builder, builder.createObjectOffsetList(this.modules));

  return joined_module_list_resp.createjoined_module_list_resp(builder,
    modules
  );
}
}
