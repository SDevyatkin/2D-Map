// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class join_system {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):join_system {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsjoin_system(bb:flatbuffers.ByteBuffer, obj?:join_system):join_system {
  return (obj || new join_system()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsjoin_system(bb:flatbuffers.ByteBuffer, obj?:join_system):join_system {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new join_system()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 *название программного модуля
 */
moduleName():string|null
moduleName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
moduleName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 *версия программного модуля (может быть пустой)
 */
moduleVersion():string|null
moduleVersion(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
moduleVersion(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startjoin_system(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addModuleName(builder:flatbuffers.Builder, moduleNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, moduleNameOffset, 0);
}

static addModuleVersion(builder:flatbuffers.Builder, moduleVersionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, moduleVersionOffset, 0);
}

static endjoin_system(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // module_name
  return offset;
}

static createjoin_system(builder:flatbuffers.Builder, moduleNameOffset:flatbuffers.Offset, moduleVersionOffset:flatbuffers.Offset):flatbuffers.Offset {
  join_system.startjoin_system(builder);
  join_system.addModuleName(builder, moduleNameOffset);
  join_system.addModuleVersion(builder, moduleVersionOffset);
  return join_system.endjoin_system(builder);
}

unpack(): join_systemT {
  return new join_systemT(
    this.moduleName(),
    this.moduleVersion()
  );
}


unpackTo(_o: join_systemT): void {
  _o.moduleName = this.moduleName();
  _o.moduleVersion = this.moduleVersion();
}
}

export class join_systemT {
constructor(
  public moduleName: string|Uint8Array|null = null,
  public moduleVersion: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const moduleName = (this.moduleName !== null ? builder.createString(this.moduleName!) : 0);
  const moduleVersion = (this.moduleVersion !== null ? builder.createString(this.moduleVersion!) : 0);

  return join_system.createjoin_system(builder,
    moduleName,
    moduleVersion
  );
}
}
