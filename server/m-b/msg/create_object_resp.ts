// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 *Ответ
 */
export class create_object_resp {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):create_object_resp {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAscreate_object_resp(bb:flatbuffers.ByteBuffer, obj?:create_object_resp):create_object_resp {
  return (obj || new create_object_resp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAscreate_object_resp(bb:flatbuffers.ByteBuffer, obj?:create_object_resp):create_object_resp {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new create_object_resp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 *Статус, true если нет ошибок
 */
status():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : true;
}

/**
 *Некорректный запрос
 */
incorrectRequest():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Внутрення ошибка ПМ Брокер сообщений, дальнейшая работа невозможна
 */
internalError():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Неизвестная структуры (значит не поступал запрос о публикации структукры)
 */
unknowStruct():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Такое название экземпляра структуры уже используется
 */
objectNameAlreadyUse():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Дескриптор созданного объекта (считается невалидным если status == false)
 */
objectHandle():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static startcreate_object_resp(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addStatus(builder:flatbuffers.Builder, status:boolean) {
  builder.addFieldInt8(0, +status, +true);
}

static addIncorrectRequest(builder:flatbuffers.Builder, incorrectRequest:boolean) {
  builder.addFieldInt8(1, +incorrectRequest, +false);
}

static addInternalError(builder:flatbuffers.Builder, internalError:boolean) {
  builder.addFieldInt8(2, +internalError, +false);
}

static addUnknowStruct(builder:flatbuffers.Builder, unknowStruct:boolean) {
  builder.addFieldInt8(3, +unknowStruct, +false);
}

static addObjectNameAlreadyUse(builder:flatbuffers.Builder, objectNameAlreadyUse:boolean) {
  builder.addFieldInt8(4, +objectNameAlreadyUse, +false);
}

static addObjectHandle(builder:flatbuffers.Builder, objectHandle:number) {
  builder.addFieldInt8(5, objectHandle, 0);
}

static endcreate_object_resp(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createcreate_object_resp(builder:flatbuffers.Builder, status:boolean, incorrectRequest:boolean, internalError:boolean, unknowStruct:boolean, objectNameAlreadyUse:boolean, objectHandle:number):flatbuffers.Offset {
  create_object_resp.startcreate_object_resp(builder);
  create_object_resp.addStatus(builder, status);
  create_object_resp.addIncorrectRequest(builder, incorrectRequest);
  create_object_resp.addInternalError(builder, internalError);
  create_object_resp.addUnknowStruct(builder, unknowStruct);
  create_object_resp.addObjectNameAlreadyUse(builder, objectNameAlreadyUse);
  create_object_resp.addObjectHandle(builder, objectHandle);
  return create_object_resp.endcreate_object_resp(builder);
}

unpack(): create_object_respT {
  return new create_object_respT(
    this.status(),
    this.incorrectRequest(),
    this.internalError(),
    this.unknowStruct(),
    this.objectNameAlreadyUse(),
    this.objectHandle()
  );
}


unpackTo(_o: create_object_respT): void {
  _o.status = this.status();
  _o.incorrectRequest = this.incorrectRequest();
  _o.internalError = this.internalError();
  _o.unknowStruct = this.unknowStruct();
  _o.objectNameAlreadyUse = this.objectNameAlreadyUse();
  _o.objectHandle = this.objectHandle();
}
}

export class create_object_respT {
constructor(
  public status: boolean = true,
  public incorrectRequest: boolean = false,
  public internalError: boolean = false,
  public unknowStruct: boolean = false,
  public objectNameAlreadyUse: boolean = false,
  public objectHandle: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return create_object_resp.createcreate_object_resp(builder,
    this.status,
    this.incorrectRequest,
    this.internalError,
    this.unknowStruct,
    this.objectNameAlreadyUse,
    this.objectHandle
  );
}
}
