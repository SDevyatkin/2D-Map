// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class get_sync_point {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):get_sync_point {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsget_sync_point(bb:flatbuffers.ByteBuffer, obj?:get_sync_point):get_sync_point {
  return (obj || new get_sync_point()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsget_sync_point(bb:flatbuffers.ByteBuffer, obj?:get_sync_point):get_sync_point {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new get_sync_point()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 *Имя точки синхронизации, которую нужно получить
 */
syncPointName():string|null
syncPointName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
syncPointName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startget_sync_point(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addSyncPointName(builder:flatbuffers.Builder, syncPointNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, syncPointNameOffset, 0);
}

static endget_sync_point(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createget_sync_point(builder:flatbuffers.Builder, syncPointNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  get_sync_point.startget_sync_point(builder);
  get_sync_point.addSyncPointName(builder, syncPointNameOffset);
  return get_sync_point.endget_sync_point(builder);
}

unpack(): get_sync_pointT {
  return new get_sync_pointT(
    this.syncPointName()
  );
}


unpackTo(_o: get_sync_pointT): void {
  _o.syncPointName = this.syncPointName();
}
}

export class get_sync_pointT {
constructor(
  public syncPointName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const syncPointName = (this.syncPointName !== null ? builder.createString(this.syncPointName!) : 0);

  return get_sync_point.createget_sync_point(builder,
    syncPointName
  );
}
}
