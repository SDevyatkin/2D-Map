// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class request_from_mb_save_state {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):request_from_mb_save_state {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsrequest_from_mb_save_state(bb:flatbuffers.ByteBuffer, obj?:request_from_mb_save_state):request_from_mb_save_state {
  return (obj || new request_from_mb_save_state()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsrequest_from_mb_save_state(bb:flatbuffers.ByteBuffer, obj?:request_from_mb_save_state):request_from_mb_save_state {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new request_from_mb_save_state()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 *Нужно сохранить состояние информационного обмена и разослать всем подключенным ПМ запрос на сохранение собственного сосотояния
 */
needSaveState():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

/**
 *Нужно приостановить текущий информационный обмен
 */
experimentPaused():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startrequest_from_mb_save_state(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addNeedSaveState(builder:flatbuffers.Builder, needSaveState:boolean) {
  builder.addFieldInt8(0, +needSaveState, +false);
}

static addExperimentPaused(builder:flatbuffers.Builder, experimentPaused:boolean) {
  builder.addFieldInt8(1, +experimentPaused, +false);
}

static endrequest_from_mb_save_state(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createrequest_from_mb_save_state(builder:flatbuffers.Builder, needSaveState:boolean, experimentPaused:boolean):flatbuffers.Offset {
  request_from_mb_save_state.startrequest_from_mb_save_state(builder);
  request_from_mb_save_state.addNeedSaveState(builder, needSaveState);
  request_from_mb_save_state.addExperimentPaused(builder, experimentPaused);
  return request_from_mb_save_state.endrequest_from_mb_save_state(builder);
}

unpack(): request_from_mb_save_stateT {
  return new request_from_mb_save_stateT(
    this.needSaveState(),
    this.experimentPaused()
  );
}


unpackTo(_o: request_from_mb_save_stateT): void {
  _o.needSaveState = this.needSaveState();
  _o.experimentPaused = this.experimentPaused();
}
}

export class request_from_mb_save_stateT {
constructor(
  public needSaveState: boolean = false,
  public experimentPaused: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return request_from_mb_save_state.createrequest_from_mb_save_state(builder,
    this.needSaveState,
    this.experimentPaused
  );
}
}
